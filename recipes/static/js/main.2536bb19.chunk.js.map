{"version":3,"sources":["config.js","components/App/InfoBlock.jsx","components/App/Filters.jsx","components/App/Recipe.jsx","components/App/RecipesList.jsx","components/App/App.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Transition","React","forwardRef","props","ref","Slide","direction","InfoBlock","useState","open","setOpen","handleClose","className","IconButton","onClick","color","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogActions","Button","variant","Filters","timeFilter","variantFilter","updateTimeFilter","updateVariantFilter","FormControl","component","RadioGroup","aria-label","name","value","onChange","FormControlLabel","control","Radio","label","Recipe","recipe","type","title","videoType","videoPoster","videoSource","ingredients","description","history","useHistory","goBack","key","uuidv4","width","height","src","frameBorder","allow","allowFullScreen","controls","poster","map","idx","weight","product","dataW","dataR","data-w","data-r","dangerouslySetInnerHTML","__html","menuTypes","breakfast","lunch","dinner","all","RecipesList","data","location","useLocation","params","URLSearchParams","search","get","time","recipeId","setVariantFilter","setTimeFilter","find","event","target","push","filter","toLowerCase","to","RecepiesRoute","App","Firebase","initializeApp","state","loading","filteredData","database","on","snapshot","val","setState","this","style","textAlign","CircularProgress","CssBaseline","basename","exact","path","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2536bb19.chunk.js","sourcesContent":["const config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nexport default config;","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default function InfoBlock() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"info-block\">\n      <div className=\"info-block-btn\">\n        <IconButton onClick={handleClickOpen}>\n          <InfoIcon color=\"primary\" />\n        </IconButton>\n      </div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          Общая информация\n        </DialogTitle>\n        <DialogContent>\n          <div>\n            <p>Между приемами пищи должно быть не менее 2x перекусов</p>\n            <p>\n              Варианты перекуса: овощи, фрукты, обезжиренный творог, хлебцы,\n              протеиновый коктейль (любой изолят) на обезжиренном молоке.\n            </p>\n\n            <p className=\"small\">\n              Все “граммы” в рационе рассчитаны в сыром/cуxом виде (до\n              приготовления).\n            </p>\n            <p className=\"small\">\n              Если в меню указано яйцо — это белок и желток, если написано белок\n              — мы отделяем белок от желтка. 1 яйцо примерно 50 грамм. 1 желток\n              примерно 20 грамм.\n            </p>\n            <p>\n              Вы может заменить определенный приём пищи на свой при соблюдении\n              кбжу.\n            </p>\n            <p>\n              Комбинировать меню можно. Вы можете выбрать завтра обед и ужин из\n              любого варианта.\n            </p>\n\n            <h1>Что мне можно пить?</h1>\n\n            <p>\n              Вода - главный напиток и наш источник силы работы нашего\n              организма. Не забывайте пить воду с расчёта 30-40мл на кг массы\n              вашего тела. Во время тренировок не забывайте пить воду! Ведь с\n              потом мы теряем жидкость и к той норме добавьте минимум стакан\n              воды.\n            </p>\n\n            <p>Не забывайте! Любые другие виды жидкости не заменят вам воду.</p>\n\n            <p>Я люблю пить кофе или я люблю пить Колу.</p>\n\n            <p>\n              Кофе - Вы можете пить и не боятся. Но Без сахара, сиропа и т.д.\n            </p>\n\n            <p>\n              Молоко в кофе - добавляйте чайную ложку нежирного коровьего молока\n              или растительного молока (без сахара).\n            </p>\n            <p>Кефир 1%-2,5% 100-150г или стакан кефира</p>\n            <p>Йогурт натуральный без добавок/греческий 3% 100-150г</p>\n\n            <p className=\"small\">\n              Сладкие газированные напитки - оставьте те в содержание которых\n              нет сахара. Но не употребляйте их больше 0,5л в сутки. И максимум\n              1-2 раза в неделю НЕ БОЛЕЕ!\n            </p>\n            <p className=\"small\">\n              Пример: Coca Cola Zero, Pepsi mango, cherry...\n            </p>\n            <p className=\"small\">\n              Чай - обязательно пейте чай, без сахара и мёда.\n            </p>\n            <p className=\"small\">\n              Вино - Вы можете себе изредка к примеру один раз на 10 дней выпить\n              бокал сухого вина (150мл).\n            </p>\n\n            <p className=\"small\">\n              При большом употребление кофеина выпивайте дополнительно минимум\n              250мл воды.\n            </p>\n\n            <p className=\"small\">Список разрешённых подсластителей:</p>\n            <ul>\n              <li>Стевия</li>\n              <li>Эритрит</li>\n              <li>Инулин</li>\n              <li>Сукралоза</li>\n            </ul>\n\n            <h1>Перекусы</h1>\n\n            <p>\n              Мы ждём от Вас одно фото любого перекуса. А если Ваши перекусы\n              можно совместить, то сделайте их на одной тарелке.\n            </p>\n\n            <p>У Вас будет 2 перекуса.</p>\n            <p>Первый перекус между завтраком и обедом. Вес порции 100-150г</p>\n            <p>Фрукты:</p>\n            <ul>\n              <li>Зелёное яблоко 120-150г или штука среднего яблока</li>\n              <li>Груша 100-150г средняя груша</li>\n              <li>Киви 100-150г, 2 больших или 3 маленьких киви</li>\n              <li>Слива 100-150г / 3 штуки среднего размера</li>\n              <li>Персик 100-120г или же один средний персик</li>\n              <li>Апельсин Апельсин 100-150г/ половина большого апельсина</li>\n              <li>Мандарин 100-150г/ 2 средних мандарина</li>\n              <li>Хурма 50г половина маленькой +хурмы</li>\n              <li>Банан 50г – 1/2 средний банан</li>\n            </ul>\n            <p>Сухофукты</p>\n            <ul>\n              <li>Курага, чернослив – 30г – 2 небольших</li>\n            </ul>\n\n            <p>Ягоды</p>\n            <ul>\n              <li>Клубника, смородина, голубика, черника – До 200г.</li>\n              <li>\n                Протеиновые батончики/печенье с малым содержанием углеводов\n              </li>\n            </ul>\n            <p>Гранат 100-150г половина маленького</p>\n            <p>Грейпфрут 100-150г половина грейпфрута среднего размера</p>\n            <p>Пастила без сахара 30-40г</p>\n            <h1 className=\"display-6\">НЕОГРАНИЧЕННО</h1>\n            <p>Вся зелень и листовые салаты, огурцы, редис, сельдерей, грибы</p>\n            <p>Второй между обедом и ужином:</p>\n            <p>Орехи 30г любые</p>\n            <p>Арахис в штуках 100</p>\n            <p>\n              Грецкие орехи в штуках приблизительно 2-3 нечищеных ореха или 5\n              очищенных;\n            </p>\n            <p>Кешью приблизительно 20 орехов;</p>\n\n            <h1 className=\"display-6\">НЕОГРАНИЧЕННО</h1>\n            <p>Вся зелень и листовые салаты, огурцы, редис, сельдерей, грибы</p>\n\n            <h1>Исключить из рациона</h1>\n            <p>Сахар</p>\n            <p>Любые сиропы</p>\n            <p>Фруктозу</p>\n            <p>Крахмал</p>\n            <p>Мед</p>\n            <p>Патоку</p>\n            <p>Маринады и соусы с сахаром</p>\n            <p>\n              Подсластили, которые можно употреблять если есть необходимость\n            </p>\n            <p>Стевия, эритрит, инулин, эритрит</p>\n\n            <hr></hr>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { IconButton } from \"@material-ui/core\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"right\" ref={ref} {...props} />;\n});\n\nexport default function Filters({ timeFilter, variantFilter, updateTimeFilter, updateVariantFilter }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div className=\"filters-btn\">\n        <IconButton onClick={handleClickOpen}>\n          <TuneIcon color=\"primary\" />\n        </IconButton>\n      </div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogContent>\n          <div className=\"filters-list\">\n            <div className=\"filters-title\">Время приготовления:</div>\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                aria-label=\"gender\"\n                name=\"time\"\n                value={timeFilter}\n                onChange={updateTimeFilter}\n              >\n                <FormControlLabel\n                  value=\"fast\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"10-15 минут\"\n                />\n                <FormControlLabel\n                  value=\"normal\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"15-30 минут\"\n                />\n                <FormControlLabel\n                  value=\"slow\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"30 минут - час\"\n                />\n                <FormControlLabel\n                  value=\"all\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Все\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <div className=\"filters-title\">Вариант:</div>\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                aria-label=\"gender\"\n                name=\"gender1\"\n                value={variantFilter}\n                onChange={updateVariantFilter}\n              >\n                <FormControlLabel\n                  value=\"breakfast\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Завтрак\"\n                />\n                <FormControlLabel\n                  value=\"lunch\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Обед\"\n                />\n                <FormControlLabel\n                  value=\"dinner\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Ужин\"\n                />\n                <FormControlLabel\n                  value=\"all\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Все\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Recipe = ({\n  recipe: {\n    type,\n    title,\n    videoType,\n    videoPoster,\n    videoSource,\n    ingredients,\n    description,\n  },\n}) => {\n  const history = useHistory();\n\n  const handleClickBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <>\n      <div className=\"filters-btn\">\n        <IconButton onClick={handleClickBack}>\n          <ArrowBackIcon color=\"primary\" />\n        </IconButton>\n      </div>\n      <div className=\"menu-item\" key={uuidv4()}>\n        <small className=\"text-muted\">{type}</small>\n        <h2 className=\"m-0 p-0\">{title}</h2>\n        {videoSource ? (\n          videoType === \"youtube\" ? (\n            <iframe\n              width=\"100%\"\n              height=\"350\"\n              title={uuidv4()}\n              src={videoSource}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n          ) : (\n            <video\n              className=\"video\"\n              width=\"100%\"\n              height=\"350\"\n              controls\n              poster={videoPoster}\n              type=\"video/mp4\"\n              src={videoSource}\n            ></video>\n          )\n        ) : null}\n        <br />\n        <div className=\"lm-styled-list list-unstyled\">\n          <li>\n            <h3>Вам понадобится:</h3>\n          </li>\n          {ingredients.map(({ weight, product, dataW, dataR }, idx) => (\n            <li key={uuidv4()} data-w={dataW} data-r={dataR}>\n              <span className=\"number\">{idx + 1}</span>\n              <nobr>{weight} гр.</nobr>\n              {product}\n            </li>\n          ))}\n        </div>\n        <p\n          className=\"small\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        />\n        <hr></hr>\n      </div>\n    </>\n  );\n};\n\nexport default Recipe;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Filters from \"./Filters\";\nimport Recipe from \"./Recipe\";\n\nconst menuTypes = {\n  breakfast: \"завтрак\",\n  lunch: \"обед\",\n  dinner: \"ужин\",\n  all: \"all\",\n};\n\nconst RecipesList = ({ data }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const variant = params.get('variant');\n  const time = params.get('time');\n  const recipeId = params.get(\"recipeId\");\n  const [variantFilter, setVariantFilter] = React.useState(variant ? variant : \"all\");\n  const [timeFilter, setTimeFilter] = React.useState(time ? time : \"all\");\n\n  const updateVariantFilter = (event) => {\n    setVariantFilter(event.target.value);\n    history.push(`?time=${timeFilter}&variant=${event.target.value}`);\n  };\n\n  const updateTimeFilter = (event) => {\n    setTimeFilter(event.target.value);\n    history.push(`?time=${event.target.value}&variant=${variantFilter}`);\n  };\n\n  if (recipeId) {\n    const recipe = data.find(({ id }) => recipeId === id);\n    return <Recipe recipeId={recipeId} recipe={recipe} />;\n  }\n\n  return (\n    <>\n      <Filters\n        variantFilter={variantFilter}\n        updateVariantFilter={updateVariantFilter}\n        timeFilter={timeFilter}\n        updateTimeFilter={updateTimeFilter}\n      />\n      {data\n        .filter(({ type }) =>\n          variantFilter === \"all\"\n            ? true\n            : type.toLowerCase() === menuTypes[variantFilter]\n        )\n        .filter(({ time }) =>\n          timeFilter === \"all\" ? true : time.toLowerCase() === timeFilter\n        )\n        .map(\n          ({\n            id,\n            type,\n            title,\n            videoType,\n            videoPoster,\n            videoSource,\n            ingredients,\n            description,\n          }) => (\n            <div className=\"menu-item\" key={uuidv4()}>\n              <small className=\"text-muted\">{type}</small>\n              <h2 className=\"m-0 p-0\">\n                <Link to={`/?recipeId=${id}`}>{title}</Link>\n              </h2>\n              {videoSource ? (\n                videoType === \"youtube\" ? (\n                  <iframe\n                    width=\"100%\"\n                    height=\"350\"\n                    title={uuidv4()}\n                    src={videoSource}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                  ></iframe>\n                ) : (\n                  <video\n                    className=\"video\"\n                    width=\"100%\"\n                    height=\"350\"\n                    controls\n                    poster={videoPoster}\n                    type=\"video/mp4\"\n                    src={videoSource}\n                  ></video>\n                )\n              ) : null}\n              <br />\n              <div className=\"lm-styled-list list-unstyled\">\n                <li>\n                  <h3>Вам понадобится:</h3>\n                </li>\n                {ingredients.map(({ weight, product, dataW, dataR }, idx) => (\n                  <li key={uuidv4()} data-w={dataW} data-r={dataR}>\n                    <span className=\"number\">{idx + 1}</span>\n                    <nobr>{weight} гр.</nobr>\n                    {product}\n                  </li>\n                ))}\n              </div>\n              <p\n                className=\"small\"\n                dangerouslySetInnerHTML={{ __html: description }}\n              />\n              <hr></hr>\n            </div>\n          )\n        )}\n    </>\n  );\n};\n\nexport default RecipesList;\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { CircularProgress } from '@material-ui/core';\n\nimport Firebase from 'firebase';\nimport config from '../../config';\nimport InfoBlock from './InfoBlock';\nimport RecipesList from './RecipesList';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nconst RecepiesRoute = ({ data }) => { \n    return (\n      <div className=\"container\">\n        {data && <RecipesList data={data} />}\n      </div>\n    )\n};\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      loading: true,\n      data: null,\n      filteredData: null,\n    };\n  }\n\n  componentDidMount() {\n    Firebase.database()\n      .ref(\"/\")\n      .on(\"value\", snapshot => {\n        const data = snapshot.val().data;\n        this.setState({ loading: false, data });\n      });\n  }\n  render() {\n    const { loading, data } = this.state;\n\n    if (loading) {\n      return (\n        <div className=\"container\" style={{textAlign: 'center'}}>\n          <CircularProgress />\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <CssBaseline />\n        <div className=\"container\">\n          <InfoBlock/>\n          <BrowserRouter basename=\"/recipes\">\n            <Switch>\n                <Route exact path=\"/\" component={() => <RecepiesRoute data={data} />} />\n            </Switch >\n          </BrowserRouter>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'typeface-roboto';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}